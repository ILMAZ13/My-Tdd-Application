version: 2
references:
  cache_key: &cache_key
    key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}

  restore_cache: &restore_cache
      restore_cache:
        <<: *cache_key

  save_cache: &save_cache
    save_cache:
      <<: *cache_key
      paths:
         ~/.gradle

  workspace: &workspace
    ~/workspace

  attach_release_workspace: &attach_release_workspace
    attach_workspace:
      at: *workspace

  persist_release_workspace: &persist_release_workspace
    persist_to_workspace:
      root: *workspace
      paths:
        - app/build

  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      JVM_OPTS: -Xmx3200m

  configure_git: &configure_git
    run:
        name: Configuring git
        command: ./configure_git.sh

jobs:
  build:
    <<: *android_config
    steps:
      - checkout
      - *restore_cache
      - *configure_git
#      - checkout
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - *save_cache
      - *persist_release_workspace

  check_style:
      <<: *android_config
      steps:
        - checkout
        - *configure_git
#        - checkout
        - *attach_release_workspace
        - *restore_cache
        - run:
            name: Run Checkstyle
            command: >
              if [[ -z "${CI_PULL_REQUEST}" ]]; then
                ./gradlew clean gnagCheck -x test
              else
                ./gradlew clean gnagReport \
                  -PauthToken="${PR_BOT_AUTH_TOKEN}" \
                  -PissueNumber="${CI_PULL_REQUEST##*/}" \
                  -x test
              fi
        - store_artifacts:
            path: app/build/reports/
            destination: /reports/
        - store_artifacts:
            path: app/build/outputs/gnag
            destination: /reports-gnag/

  test_unit:
        <<: *android_config
        steps:
          - checkout
          - *configure_git
#          - checkout
          - *attach_release_workspace
          - *restore_cache
          - run:
              name: Run tests
              command: ./gradlew test
          - store_artifacts:
              path: app/build/reports/
              destination: /reports/
          - store_test_results:
              path: app/build/test-results/
              destination: /test-results/

  deploy_beta:
      <<: *android_config
      steps:
        - checkout
        - *configure_git
        - checkout
        - *attach_release_workspace
        - *restore_cache
        - run:
            name: Deploy Fabric Beta
            command: ./gradlew assembleRelease crashlyticsUploadDistributionRelease

workflows:
  version: 2
  workflow:
    jobs:
      - build:
          filters:
            tags:
              only: /^.*/
      - check_style:
          requires:
              - build
          filters:
            tags:
              only: /^.*/
      - test_unit:
          requires:
              - build
          filters:
            tags:
              only: /^.*/
      - deploy_staging:
          requires:
            - check_style
            - test_unit
          filters:
            tags:
              only: /^v{0,1}\d+[.]\d+[.]\d+$/
            branches:
              ignore: /^.*/